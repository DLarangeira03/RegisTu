/*
 * A. Benquerer
 * e-mail: dev.benquerer@gmail.com
 * GitHub: https://github.com/Benquerer
 * 
 * Aluno 24633 @ IPT, Oct 2024.
 * 
 * The code in this file was developed for learning and experimentation purposes.
 * 
 */
package gui;

import com.formdev.flatlaf.themes.FlatMacDarkLaf;
import java.rmi.RemoteException;
import java.util.Base64;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.LookAndFeel;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import p2p.IremoteP2P;
import utils.Curriculum;
import utils.RMI;
import utils.User;
import utils.app_params;

/**
 * This frame implements the main application, for a logged user
 *
 * @author A. Benquerer @ IPT
 * @author D. Larangeira @ IPT
 */
public class RegistrantClient extends javax.swing.JFrame {

    /**
     * User that will be registering the curriculum's (Registrant Entity).
     */
    User registrant;

    /**
     * List used to store the curricula from a search
     */
    DefaultListModel<String> searchResults = new DefaultListModel();

    /**
     * Node in P2P Network that the client connects to
     */
    IremoteP2P remote;

    /**
     * Creates the main application frame
     *
     * @deprecated Use
     * {@link ApplicationFrame#ApplicationFrame(utils.User, javax.swing.LookAndFeel)}
     * instead.
     */
    @Deprecated
    public RegistrantClient() {
        //netbeans init code
        initComponents();
        //center app frame
        this.setLocationRelativeTo(null);

    }

    /**
     * Creates the main application frame with a predetermined LaF and
     * determines a user currently logged in to the app.
     *
     * @param loggedUser User that logged in via the login frame
     * @param laf LaF to use in the app
     */
    public RegistrantClient(User user, LookAndFeel laf, String address) throws Exception {
        //use passed in laf 
        try {
            UIManager.setLookAndFeel(laf);
        } catch (UnsupportedLookAndFeelException ex) {

        }

        //netbeans init code
        initComponents();
        //center and display the app frame
        this.setLocationRelativeTo(null);
        this.setVisible(true);

        //define loggedUser
        this.registrant = user;
        //use username in title, main menu  and wallet
        this.setTitle(app_params.APP_NAME + " (Logged as " + user.getUserName() + ")");
        lblWelcome.setText("Welcome, " + user.getUserName() + "!");
        
        //Connect to node in P2P Network
        remote = (IremoteP2P) RMI.getRemote(address);
        new Thread(() -> {
            try {
                String ledger = remote.getBlockchain().toString();
                SwingUtilities.invokeLater(() -> {
                    txtLedger.setText(ledger);
                });
            } catch (RemoteException ex) {
                SwingUtilities.invokeLater(() -> {
                    JOptionPane.showMessageDialog(rootPane, "Error during the operation on the server side\n Please try again later..", "ERROR LOADING LEDGER", JOptionPane.ERROR_MESSAGE);
                });
            }
        }).start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btnSignOut = new javax.swing.JButton();
        btnQuit = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        lblWelcome = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtLedger = new javax.swing.JTextArea();
        jPanel23 = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jPanel35 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtUserSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        listSearchRes = new javax.swing.JList<>();
        jPanel9 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtSrchFrom = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtSrchValid = new javax.swing.JTextField();
        jPanel25 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel28 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtSrchDesc = new javax.swing.JTextArea();
        jPanel10 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNumRes = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel11 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        txtToRegis = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescRegis = new javax.swing.JTextArea();
        jPanel16 = new javax.swing.JPanel();
        btnNewRecord = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1200, 650));
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 650));

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.TRAILING));

        btnSignOut.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnSignOut.setText("Sign Out");
        btnSignOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignOutActionPerformed(evt);
            }
        });
        jPanel2.add(btnSignOut);

        btnQuit.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnQuit.setText("Quit ");
        btnQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitActionPerformed(evt);
            }
        });
        jPanel2.add(btnQuit);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        lblTitle.setFont(new java.awt.Font("Segoe UI", 0, 40)); // NOI18N
        lblTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon.png"))); // NOI18N
        lblTitle.setText(utils.app_params.APP_NAME);
        jPanel3.add(lblTitle);

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel18.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 25));

        lblWelcome.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        lblWelcome.setText("Welcome USERNAME!");
        jPanel18.add(lblWelcome);

        jPanel1.add(jPanel18, java.awt.BorderLayout.PAGE_START);

        jPanel17.setLayout(new java.awt.BorderLayout());

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Server Ledger:");
        jPanel17.add(jLabel13, java.awt.BorderLayout.PAGE_START);

        txtLedger.setEditable(false);
        txtLedger.setColumns(20);
        txtLedger.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtLedger.setRows(5);
        jScrollPane4.setViewportView(txtLedger);

        jPanel17.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        jPanel23.setMaximumSize(new java.awt.Dimension(1002, 50));
        jPanel23.setMinimumSize(new java.awt.Dimension(1002, 50));
        jPanel23.setPreferredSize(new java.awt.Dimension(1002, 50));

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1002, Short.MAX_VALUE)
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPanel17.add(jPanel23, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 355, Short.MAX_VALUE)
        );

        jPanel17.add(jPanel34, java.awt.BorderLayout.LINE_END);

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 355, Short.MAX_VALUE)
        );

        jPanel17.add(jPanel35, java.awt.BorderLayout.LINE_START);

        jPanel1.add(jPanel17, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Home", jPanel1);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING, 10, 10));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Username:");
        jPanel7.add(jLabel1);

        txtUserSearch.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtUserSearch.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel7.add(txtUserSearch);

        btnSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel7.add(btnSearch);

        jPanel4.add(jPanel7, java.awt.BorderLayout.PAGE_START);

        jPanel8.setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerLocation(230);
        jSplitPane1.setDividerSize(0);

        listSearchRes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        listSearchRes.setModel(searchResults);
        listSearchRes.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listSearchResValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listSearchRes);

        jSplitPane1.setLeftComponent(jScrollPane1);

        jPanel9.setLayout(new java.awt.BorderLayout());

        jPanel26.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 20, 5));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setText("Registrant:");
        jPanel26.add(jLabel6);

        txtSrchFrom.setEditable(false);
        txtSrchFrom.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSrchFrom.setMaximumSize(new java.awt.Dimension(180, 42));
        txtSrchFrom.setMinimumSize(new java.awt.Dimension(180, 42));
        txtSrchFrom.setPreferredSize(new java.awt.Dimension(180, 42));
        jPanel26.add(txtSrchFrom);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel8.setText("Status:");
        jPanel26.add(jLabel8);

        txtSrchValid.setEditable(false);
        txtSrchValid.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtSrchValid.setMaximumSize(new java.awt.Dimension(134, 42));
        txtSrchValid.setMinimumSize(new java.awt.Dimension(134, 42));
        txtSrchValid.setPreferredSize(new java.awt.Dimension(134, 42));
        jPanel26.add(txtSrchValid);

        jPanel9.add(jPanel26, java.awt.BorderLayout.PAGE_START);

        jPanel25.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel27.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 20, 5));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel9.setText("Description:");
        jPanel27.add(jLabel9);

        jPanel25.add(jPanel27, java.awt.BorderLayout.PAGE_START);

        jPanel28.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 20, 5));

        jScrollPane5.setPreferredSize(new java.awt.Dimension(600, 290));

        txtSrchDesc.setEditable(false);
        txtSrchDesc.setColumns(20);
        txtSrchDesc.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSrchDesc.setRows(5);
        jScrollPane5.setViewportView(txtSrchDesc);

        jPanel28.add(jScrollPane5);

        jPanel25.add(jPanel28, java.awt.BorderLayout.CENTER);

        jPanel9.add(jPanel25, java.awt.BorderLayout.CENTER);

        jSplitPane1.setRightComponent(jPanel9);

        jPanel8.add(jSplitPane1, java.awt.BorderLayout.CENTER);

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Results: ");
        jPanel10.add(jLabel2);

        txtNumRes.setEditable(false);
        txtNumRes.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtNumRes.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNumRes.setMaximumSize(new java.awt.Dimension(80, 30));
        txtNumRes.setMinimumSize(new java.awt.Dimension(80, 30));
        txtNumRes.setPreferredSize(new java.awt.Dimension(80, 30));
        jPanel10.add(txtNumRes);

        jPanel8.add(jPanel10, java.awt.BorderLayout.PAGE_END);

        jPanel4.add(jPanel8, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Curriculum Lookup", jPanel4);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 20, 5));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        jLabel3.setText("Register New Curriculum:");
        jPanel12.add(jLabel3);

        jSeparator1.setPreferredSize(new java.awt.Dimension(170, 0));
        jPanel12.add(jSeparator1);

        jPanel5.add(jPanel12, java.awt.BorderLayout.PAGE_START);

        jPanel11.setLayout(new java.awt.BorderLayout());

        jPanel15.setLayout(new java.awt.BorderLayout());

        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 50));

        jPanel19.setLayout(new java.awt.GridLayout(2, 2, 0, 20));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Register To:");
        jPanel19.add(jLabel4);

        txtToRegis.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtToRegis, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(txtToRegis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jPanel19.add(jPanel20);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Description:");
        jPanel19.add(jLabel5);

        txtDescRegis.setColumns(20);
        txtDescRegis.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDescRegis.setRows(5);
        jScrollPane2.setViewportView(txtDescRegis);

        jPanel19.add(jScrollPane2);

        jPanel13.add(jPanel19);

        jPanel15.add(jPanel13, java.awt.BorderLayout.CENTER);

        jPanel16.setMaximumSize(new java.awt.Dimension(849, 100));
        jPanel16.setMinimumSize(new java.awt.Dimension(849, 100));

        btnNewRecord.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        btnNewRecord.setText("Sign and Register");
        btnNewRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewRecordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1002, Short.MAX_VALUE)
            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel16Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(btnNewRecord)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel16Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(btnNewRecord)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel15.add(jPanel16, java.awt.BorderLayout.PAGE_END);

        jPanel11.add(jPanel15, java.awt.BorderLayout.CENTER);

        jPanel14.setMaximumSize(new java.awt.Dimension(220, 43));
        jPanel14.setMinimumSize(new java.awt.Dimension(220, 43));
        jPanel14.setPreferredSize(new java.awt.Dimension(220, 43));
        jPanel11.add(jPanel14, java.awt.BorderLayout.PAGE_END);

        jPanel5.add(jPanel11, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Add Record", jPanel5);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Handles quitting the app as a whole, without going back to the login
     * frame.
     *
     * @param evt quit button clicked
     */
    private void btnQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitActionPerformed
        //Verify if the user really wants to quit
        int confirmation = JOptionPane.showConfirmDialog(this,
                """
                Exit application now?
                This action will logout your
                user and close the application
                (Unsaved actions will be lost!!)
                """,
                "Exiting Application",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.ERROR_MESSAGE);
        //if so, quit
        if (confirmation == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnQuitActionPerformed

    /**
     * Handles logging out of the app, returning the user to the main login
     * frame.
     *
     * @param evt sign out button was clicked.
     */
    private void btnSignOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignOutActionPerformed
        //Verify if the user want to logout
        int confirmation = JOptionPane.showConfirmDialog(this,
                """
                Logout now?
                This action will return you
                to the login page.
                (Unsaved actions will be lost!!)
                """,
                "Exiting Application",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.ERROR_MESSAGE);
        //if so, logout (window closed event will return to loginpage)
        if (confirmation == JOptionPane.YES_OPTION) {
            //make user is logged out
            registrant = null;
            //dispose
            this.dispose();
        }
    }//GEN-LAST:event_btnSignOutActionPerformed

    private void btnNewRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewRecordActionPerformed
        //get to name from input
        String toUsername = txtToRegis.getText();
        String desc = txtDescRegis.getText();
        //check provided information
        if (toUsername.matches("") || desc.matches("")) {
            //alert the user and do nothing else
            JOptionPane.showMessageDialog(rootPane, """
                                                    Please make sure all
                                                    fields have been filled!
                                                    """, "Missing Inputs", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                if (remote.userExists(toUsername)) {
                    int confirmation = JOptionPane.showConfirmDialog(rootPane, """
                                                                   Are you sure you want to
                                                                   sign this curriculum and
                                                                   submit it to the blockchain?""", "Confirm Submission", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                    if (confirmation == JOptionPane.YES_OPTION) { //action confirmed
                        //build curriculum and send to server
                        //get public key from receiving user
                        byte[] ownerPub = remote.getUserPub(toUsername);
                        Curriculum c = new Curriculum(registrant, toUsername, ownerPub, desc);
                        String currTrans = Base64.getEncoder().encodeToString(c.toByteArr());
                        remote.addTransaction(currTrans);

                    } else { //action aborted
                        JOptionPane.showMessageDialog(rootPane, "No submission was made!", "Action canceled", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Referenced user not found!", "Can't Find User", JOptionPane.ERROR_MESSAGE);
                }
            } catch (RemoteException ex) {
                JOptionPane.showMessageDialog(rootPane, "Error during the operation on the server side\n Please try again later..", "ERROR", JOptionPane.ERROR_MESSAGE);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, "Error during the operation.", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_btnNewRecordActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String searchTarget = txtUserSearch.getText();
        //limpa a lista
        searchResults.clear();
        btnSearch.setEnabled(false);
        try{
            if (remote.userExists(searchTarget)) {
                //search thread
                new Thread(() -> {
                    try {
                        List<String> res = remote.searchUserCurricula(searchTarget);
                        //atualiza a lista
                        searchResults.addAll(res);
                        SwingUtilities.invokeLater(() -> {
                            txtNumRes.setText(String.valueOf(res.size()));
                            JOptionPane.showMessageDialog(rootPane, "Your search returned " + res.size() + " results.", "Search successful", JOptionPane.INFORMATION_MESSAGE);
                            btnSearch.setEnabled(true);
                        });
                    } catch (RemoteException ex) {
                        ex.printStackTrace();
                    }
                }).start();
            }else{
                JOptionPane.showMessageDialog(rootPane, "Referenced user not found!", "Can't Find User", JOptionPane.ERROR_MESSAGE);
            }
        }catch(RemoteException ex){
            JOptionPane.showMessageDialog(rootPane, "Error during the operation on the server side\n Please try again later..", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void listSearchResValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listSearchResValueChanged
        if (!evt.getValueIsAdjusting()) { // check if the selection is over (was printing twice) 
            try {
                //check if the selection is over (was printing twice)
                String transaction = listSearchRes.getSelectedValue();
                //load curriculum from string
                Curriculum c = Curriculum.fromByteArr(Base64.getDecoder().decode(transaction));
                //display informattion
                txtSrchFrom.setText(c.getEntidade());
                txtSrchDesc.setText(c.getDesc());
                txtSrchValid.setText(c.IsValid() ? "Verified" : "Unverified");
                
            } catch (Exception ex) {
                if(listSearchRes.getSelectedValue() != null){
                    JOptionPane.showMessageDialog(rootPane, "Error loading transaction information", "ERROR", JOptionPane.ERROR_MESSAGE); 
                }
            }
        }
    }//GEN-LAST:event_listSearchResValueChanged

    /**
     * The main function of the application
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception {
        //Change LaF of application (Customized by FlatLaf library
        try {
            //set LaF MacOS Dark
            UIManager.setLookAndFeel(new FlatMacDarkLaf());
            //LaF customization
            UIManager.put("Button.arc", 20);
            UIManager.put("Component.arc", 20);
            UIManager.put("TextComponent.arc", 20);
            UIManager.put("Component.focusWidth", 1);
            UIManager.put("Component.arrowType", "chevron");
        } catch (Exception e) {
            e.printStackTrace();
        }
        String address = "//192.168.1.58:10001/node1";

        User user = new User("andre");
        user.load("123qwe");
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new RegistrantClient(user, UIManager.getLookAndFeel(), address).setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(RegistrantClient.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNewRecord;
    private javax.swing.JButton btnQuit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSignOut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JList<String> listSearchRes;
    private javax.swing.JTextArea txtDescRegis;
    private javax.swing.JTextArea txtLedger;
    private javax.swing.JTextField txtNumRes;
    private javax.swing.JTextArea txtSrchDesc;
    private javax.swing.JTextField txtSrchFrom;
    private javax.swing.JTextField txtSrchValid;
    private javax.swing.JTextField txtToRegis;
    private javax.swing.JTextField txtUserSearch;
    // End of variables declaration//GEN-END:variables

}
